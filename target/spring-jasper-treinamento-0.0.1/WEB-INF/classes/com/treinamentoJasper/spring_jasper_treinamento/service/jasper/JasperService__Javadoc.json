{"doc":"","fields":[],"enumConstants":[],"methods":[{"name":"gerandoRelatorio","paramTypes":["java.lang.String","java.util.HashMap","net.sf.jasperreports.engine.data.JRBeanCollectionDataSource","com.treinamentoJasper.spring_jasper_treinamento.ServletInitializer.Tipos","jakarta.servlet.http.HttpServletResponse"],"doc":" \n Método para geração do relatório. Recebe a requisição e chama o método de\n geração de relatórios.\n \n @param nomeRelatorio {@link String}\n @param parametros    {@link HashMap} parâmetros do relatório\n @param dataSource    {@link JRBeanCollectionDataSource} conjunto de dados que\n                      será percorrido para preencher o relatório\n @param tema\n @param response      {@link HttpServletResponse} Fluxo de saída da requisição\n                      HTTP GET\n @throws JRException\n @throws IOException\n"},{"name":"compileReport","paramTypes":["java.lang.String"],"doc":" \n Compila um arquivo .jrxml para .jasper. Por padrão, todos os arquivos\n relacionados aos relatórios estão no diretório \"/resources/reports\".\n \n @param reportFileName {@link String} nome do arquivo .jrxml a ser compilado\n                       para .jasper\n @return um objeto {@link JasperReport} já com os binários do relatório\n         carregados\n"},{"name":"dadosResultantes","paramTypes":["net.sf.jasperreports.engine.data.JRBeanCollectionDataSource","java.util.HashMap"],"doc":" \n Método para compilar uma {@link JRBeanCollectionDataSource} e {@link HashMap}\n em um único {@link HashMap}.\n \n @param dataSource {@link JRBeanCollectionDataSource}\n @param parametros {@link HashMap}\n @return {@link HashMap}\n"},{"name":"export","paramTypes":["net.sf.jasperreports.engine.JasperPrint"],"doc":" \n Método para fazer exportação do relatório\n \n @param print {@link JasperPrint}\n @return o conteúdo atual deste fluxo como uma matriz de bytes.\n \n"}],"constructors":[]}