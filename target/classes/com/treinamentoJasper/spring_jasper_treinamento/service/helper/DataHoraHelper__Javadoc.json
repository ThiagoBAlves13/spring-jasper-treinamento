{"doc":"","fields":[],"enumConstants":[],"methods":[{"name":"dateTimeFormat","paramTypes":["java.time.LocalDateTime"],"doc":"\n \r\n Método para formatar o {@link LocalDateTime} recebido como parâmetro.\r\n \r\n @param datetime {@link LocalDateTime}\r\n @return o {@link LocalDateTime} formato pelo método.\r\n"},{"name":"dateFormat","paramTypes":["java.time.LocalDate"],"doc":"\n \r\n Método para formatar a data no padrão dd/MM/yyyy.\r\n \r\n @param date {@link LocalDateTime}\r\n @return a data formatada\r\n"},{"name":"dateFormat","paramTypes":["java.time.LocalDateTime"],"doc":"\n \r\n Método para formatar a data no padrão dd/MM/yyyy.\r\n \r\n @param datetime {@link LocalDateTime}\r\n @return a data formatada\r\n"},{"name":"timeFormat","paramTypes":["java.time.LocalTime"],"doc":"\n \r\n Método para formatar a hora no padrão HH:mm:ss.\r\n \r\n @param time {@link LocalTime}\r\n @return a hora formatada\r\n"},{"name":"toEpochMilli","paramTypes":["java.time.LocalDateTime"],"doc":"\n \r\n Método que calcula um instante de tempo entre a datatime passada como\r\n parâmetro e a epoch date de acordo com a zona de fuso.\r\n \r\n @param datetime {@link LocalDateTime}\r\n @return {@link Long} resultante do instante de tempo.\r\n"},{"name":"toEpochMilli","paramTypes":["java.time.LocalDate"],"doc":"\n \r\n Método que calcula um instante de tempo entre a data passada como parâmetro\r\n iniciada a meia noite e a epoch date de acordo com a zona de fuso.\r\n \r\n @param date {@link LocalDate}\r\n @return {@link Long} resultante do instante de tempo.\r\n"},{"name":"mesCompleto","paramTypes":["int","int"],"doc":"\n \r\n Método que recebe como parâmetro ano e mês que são tratados para retornar o\r\n mês completo conforme calendário gregoriano.\r\n \r\n @param ano de referência\r\n @param mes de referência\r\n @return {@link String} como mês completo.\r\n"},{"name":"dataTime","paramTypes":["java.lang.String"],"doc":"\n \r\n Método que recebe uma String de dataTime como parâmetro e trata a string para\r\n o formato dd/MM/yyyy HH:mm e convertendo para {@link LocalDateTime}\r\n \r\n @param dataHora {@link String}\r\n @return {@link LocalDateTime}\r\n"},{"name":"dataTimeNowPlus","paramTypes":[],"doc":"\n \r\n Método para pegar a dataTime local no momento e somar {@link #HORAMAIS} e\r\n formatar {@link #FORMATO_PADRAO_DATATIME}\r\n \r\n @return {@link String}\r\n"},{"name":"dataTimeNow","paramTypes":[],"doc":"\n \r\n Método para pegar o DataTime no momento e formatá-lo {@link #FORMATO_PADRAO_DATATIME}.\r\n \r\n @return {@link String}\r\n"},{"name":"data","paramTypes":["java.lang.String"],"doc":"\n \r\n Método que recebe uma String de dataTime como parâmetro e trata a string para\r\n o formato dd/MM/yyyy e convertendo para {@link LocalDate}\r\n \r\n @param data {@link String}\r\n @return {@link LocalDate}\r\n"},{"name":"converteMes","paramTypes":["java.lang.String"],"doc":"\n \r\n Método que recebe uma String \"MM\" \"MMM\"\r\n \r\n @param mes {@link String}\r\n @return {@link String}\r\n"},{"name":"converteMesTrigramaAno","paramTypes":["java.lang.String","java.lang.String"],"doc":"\n \r\n Método para retornar o mês e ano no padrão MMM/YYYY\r\n \r\n @param mes {@link String}\r\n @param ano {@link String}\r\n @return {@link String}\r\n"},{"name":"dataFimAno","paramTypes":["java.lang.String"],"doc":"\n \r\n Método que recebe uma String \"yyyy\" e converte para \"yyyy-12-31\"\r\n \r\n @param data {@link String}\r\n @return {@link LocalDate}\r\n"}],"constructors":[]}